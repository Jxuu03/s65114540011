services:
  backend:
    build: ./backend
    ports:
      - "10011:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DB_NAME=mydb
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    restart: always
    command: >
      sh -c "
      until pg_isready -h db -p 5432 -U myuser; do
        echo 'Waiting for PostgreSQL...'; sleep 2;
      done;
      python manage.py migrate &&
      gunicorn freshyfishy.wsgi:application --bind 0.0.0.0:8000 --workers 3
      "
    networks:
      - default
      - traefik-public   
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/s0011`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.docker.network=traefik-public"

  frontend:
    build: ./frontend/iot_frontend
    ports:
      - "10011:80"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/s65114540011`)"
      - "traefik.http.routers.frontend.middlewares=strip-prefix"
      - "traefik.http.middlewares.strip-prefix.stripprefix.prefixes=/s65114540011"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000" 
      - "traefik.docker.network=traefik-public"
    networks:
      - traefik-public

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "20011:5432"
    networks:
      - default

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
  traefik-public:
    external: true
